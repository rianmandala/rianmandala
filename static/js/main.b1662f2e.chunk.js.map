{"version":3,"sources":["utils/breakPoint.js","assets/img/bg_header.png","components/AppNavBar.js","assets/img/avatar_design.svg","assets/img/bottom_gap_white.svg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["screenSize","ssm","sm","md","lg","xl","xxl","sizeName","Object","keys","map","key","reduce","acc","name","size","useStyles","makeStyles","list","width","fullList","AppNavBar","classes","useState","openDrawer","setOpenDrawer","toggleDrawer","open","dataNavDrawer","Icon","PersonIcon","text","link","EmojiObjectsIcon","ContactsIcon","hash","useLocation","window","scrollY","setScrollY","handleNavigation","useCallback","e","currentTarget","useEffect","addEventListener","removeEventListener","anchor","AppBarContainer","styled","div","breakPoint","AppBar","position","className","Toolbar","Typography","variant","href","color","IconButton","onClick","SwipeableDrawer","onClose","onOpen","clsx","role","onKeyDown","List","index","ListItem","button","style","display","textDecoration","ListItemIcon","ListItemText","primary","Header","HeaderContainer","bgHeader","target","rel","src","avatarDesign","alt","bottomGapWhite","About","lazy","Footer","Projects","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1662f2e.chunk.js","sourcesContent":["const screenSize = {\r\n    ssm: 350,\r\n    sm: 576,\r\n    md: 768,\r\n    lg: 992,\r\n    xl: 1200,\r\n    xxl: 1400,\r\n  };\r\n  \r\n  export default (sizeName) => {\r\n    const breakPointArray = Object.keys(screenSize).map((key) => [key, screenSize[key]]);\r\n  \r\n    const [result] = breakPointArray.reduce((acc, [name, size]) => {\r\n      if (sizeName === name) return [...acc, `@media (max-width: ${size}px)`];\r\n      return acc;\r\n    }, []);\r\n    return result;\r\n  };\r\n  ","export default __webpack_public_path__ + \"static/media/bg_header.fa37ff2d.png\";","import React,{useState, useEffect, useCallback} from 'react'\r\nimport styled from '@emotion/styled'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport breakPoint from '../utils/breakPoint'\r\n\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  });\r\nfunction AppNavBar() {\r\n\r\n    const classes = useStyles();\r\n    const [openDrawer, setOpenDrawer] = useState(false) \r\n\r\n    const toggleDrawer = (open) => {\r\n        setOpenDrawer(open);\r\n    };\r\n\r\n    const dataNavDrawer = [\r\n        {Icon: PersonIcon, text: 'About',link:'#about'},\r\n        {Icon: EmojiObjectsIcon, text: 'Projects', link: '#project'},\r\n        {Icon: ContactsIcon, text: 'Contact', link: '#contact'},\r\n    ]\r\n    \r\n      const list = (anchor) => (\r\n        <div\r\n          className={clsx(classes.list, {\r\n            [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n          })}\r\n          role=\"presentation\"\r\n          onClick={()=>toggleDrawer(false)}\r\n          onKeyDown={()=>toggleDrawer(false)}\r\n        >\r\n          <List>\r\n            { dataNavDrawer.map(({Icon, text, link}, index) => (\r\n              <ListItem button key={text}>\r\n                <a style={{display: 'flex',textDecoration: 'none', color: '#262A35'}} href={link}>\r\n                  <ListItemIcon><Icon /></ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </a>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      );\r\n\r\n    const {hash} = useLocation()\r\n\r\n    const [scrollY, setScrollY] = useState(window.scrollY);\r\n\r\n    const handleNavigation = useCallback(\r\n      e => {\r\n        const window = e.currentTarget;\r\n        setScrollY(window.scrollY);\r\n      }, [scrollY]\r\n    );\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"scroll\", (e) => handleNavigation(e));\r\n    \r\n      return () => { // return a cleanup function to unregister our function since its gonna run multiple times\r\n        window.removeEventListener(\"scroll\", (e) => handleNavigation(e));\r\n      };\r\n    }, [scrollY]);\r\n\r\n    const AppBarContainer = styled.div`\r\n        .app-bar{\r\n            transition: 0.5s;\r\n            position:fixed;\r\n            top:0;\r\n            color: ${scrollY >=200 ? '#262A35' : 'white'};\r\n            background:transparent;\r\n            .MuiToolbar-root{\r\n              padding: 0 5%;\r\n            }\r\n            .btn-nav:nth-of-type(1){\r\n              margin-left:auto;\r\n            }\r\n            .btn-nav{\r\n              padding: 10px 20px;\r\n              color: ${scrollY >=200 ? '#262A35' : 'white'};\r\n              text-decoration: none;\r\n            }\r\n            .btn-nav.active{\r\n              position:relative;\r\n              &:after{\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                bottom: -4px;\r\n                left: 20%;\r\n                width: 38%;\r\n                height: 3px;\r\n                background: ${scrollY >=200 ? '#262A35' : '#E41D6F'};\r\n              }\r\n            }\r\n            .btn-drawer{\r\n                display:none;\r\n            }\r\n\r\n        }\r\n        .app-bar.active{\r\n          transition:0.5s;\r\n          background: white;\r\n        }\r\n        ${breakPoint('sm')}{\r\n            .btn-nav{\r\n                display:none;\r\n            }\r\n            .btn-drawer{\r\n                margin-left:auto;\r\n                display:inline-flex !important;\r\n            }\r\n        }\r\n    `\r\n\r\n    return (\r\n        <AppBarContainer>\r\n            <AppBar position=\"sticky\" className={`app-bar ${scrollY >=200 && 'active'}`}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\">\r\n                        Rian Mandala\r\n                    </Typography>\r\n                    <a href=\"#about\" className={`btn-nav ${hash==\"#about\" && 'active'}`} color=\"inherit\">About</a>\r\n                    <a href=\"#project\" className={`btn-nav ${hash==\"#project\" && 'active'}`} color=\"inherit\">Projects</a>\r\n                    <a href=\"#contact\" className={`btn-nav ${hash==\"#contact\" && 'active'}`} color=\"inherit\">Contact</a>\r\n                    <IconButton onClick={()=>toggleDrawer(true)} className=\"btn-drawer\" color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <SwipeableDrawer\r\n                        anchor=\"left\"\r\n                        open={openDrawer}\r\n                        onClose={()=> toggleDrawer(false)}\r\n                        onOpen={()=>toggleDrawer(true)}\r\n                        >\r\n                        {list(\"left\")}\r\n                    </SwipeableDrawer>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </AppBarContainer>\r\n    )\r\n}\r\n\r\nexport default AppNavBar\r\n","export default __webpack_public_path__ + \"static/media/avatar_design.8007f525.svg\";","export default __webpack_public_path__ + \"static/media/bottom_gap_white.64ef8b3b.svg\";","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport bgHeader from '../assets/img/bg_header.png'\r\nimport AppNavBar from './AppNavBar'\r\nimport avatarDesign from '../assets/img/avatar_design.svg'\r\nimport bottomGapWhite from '../assets/img/bottom_gap_white.svg'\r\nimport breakPoint from '../utils/breakPoint'\r\n\r\nfunction Header() {\r\n\r\n    const HeaderContainer = styled.div`\r\n        background-image: linear-gradient(to bottom, rgba(37, 41, 52, 0.9), rgba(37, 41, 52, 0.9)), url('${bgHeader}');\r\n        background-repeat:no-repeat;\r\n        background-size:cover;\r\n        position: relative;\r\n        .MuiPaper-elevation4{\r\n            box-shadow: none;\r\n        }\r\n        .header__body{\r\n            height: 110vh;\r\n            display:grid;\r\n            padding: 0 5%;\r\n            place-content: center;\r\n            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\r\n            grid-template-areas: \"topLeft topRight\"\r\n                                 \"bottomLeft bottomRight\";\r\n            gap: 16px;\r\n            .header__info{\r\n                color:white;\r\n                align-self: center;\r\n                h2{\r\n                    text-align:left;\r\n                    margin-bottom:4px;\r\n                    font-weight: 700;\r\n                    color: white;\r\n                }\r\n                .header-myname{\r\n                    color: #E41D6F;\r\n                }\r\n                h1{\r\n                    font-weight: 700;\r\n                }\r\n                .btn-download-cv{\r\n                    display:inline-block;\r\n                    text-decoration:none;\r\n                    color: white;\r\n                    border:2px solid white;\r\n                    padding: 10px 24px;\r\n                    margin-top: 32px;\r\n                    border-radius: 30px;\r\n                    &:hover{\r\n                        background:white;\r\n                        color: #E41D6F\r\n                    }\r\n                }\r\n            }\r\n            img{\r\n                width:60%;\r\n                margin: 0 auto;\r\n            }\r\n        }\r\n        .bottom-gap-white{\r\n            position:absolute;\r\n            bottom:-1px;\r\n            right:0;\r\n            width:100%;\r\n        }\r\n        ${breakPoint('sm')}{\r\n            .header__info{\r\n                grid-area: bottomLeft !important;\r\n                margin-top:16px;\r\n            }\r\n            img{\r\n                grid-area: topLeft !important;\r\n            }\r\n        }\r\n\r\n    `\r\n\r\n    return (\r\n        <HeaderContainer>\r\n            <AppNavBar />\r\n            <div className=\"header__body\">\r\n                <div className=\"header__info\">\r\n                    <h2>Hello, <span className=\"header-myname\">my name Rian mandala</span></h2>\r\n                    <h1>I'am a front-end web developer</h1>\r\n\r\n                    <a href=\"https://drive.google.com/file/d/1CrEXdEZAOW9a-gy5BrakiSMnT3DLpNnD/view?usp=sharing\" target=\"_blank\" rel=\"noopener\" className=\"btn-download-cv\">Download CV</a>\r\n                </div>\r\n                <img src={avatarDesign} alt=\"avatar design\" />\r\n            </div>\r\n            <img className=\"bottom-gap-white\" src={bottomGapWhite} alt=\"bottom gap white\" />\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {Fragment, lazy, Suspense} from 'react'\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nconst About = lazy(()=> import(\"./components/About\"))\nconst Footer = lazy(()=> import(\"./components/Footer\"))\nconst Projects = lazy(()=> import(\"./components/Projects\"))\n\nfunction App() {\n\n  return (\n    <Fragment>\n      <BrowserRouter>\n        <Header />\n        <Suspense fallback={<div>Loading...</div>}>\n          <About />\n          <Projects />\n          <Footer />\n        </Suspense>\n      </BrowserRouter>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}